# Generated by Django 5.2 on 2025-05-04 14:31

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'admin'), (2, 'pembimbing'), (3, 'mahasiswa')], default=1, max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminIPB',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nip', models.CharField(max_length=50)),
                ('admin', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mhs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nama_Mhs', models.CharField(max_length=50, null=True)),
                ('nim', models.CharField(max_length=13)),
                ('admin', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notifikasi',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('isi', models.CharField(max_length=200)),
                ('waktu_kirim', models.DateTimeField()),
                ('nim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.mhs')),
            ],
        ),
        migrations.CreateModel(
            name='Pembimbing',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nama_Dosen', models.CharField(max_length=50, null=True)),
                ('nip', models.CharField(max_length=15)),
                ('admin', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Penelitian',
            fields=[
                ('penelitian_id', models.AutoField(primary_key=True, serialize=False)),
                ('judul', models.CharField(max_length=150)),
                ('tanggal_mulai', models.DateTimeField()),
                ('nim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.mhs')),
                ('nip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.pembimbing')),
            ],
        ),
        migrations.CreateModel(
            name='milestone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('deadline', models.DateField(max_length=20)),
                ('jenis_milestone', models.CharField(choices=[('penetapan komisi pembimbing', 'Penetapan Komisi Pembimbing'), ('sidang komisi 1', 'Sidang Komisi 1'), ('kolokium', 'Kolokium'), ('proposal', 'Proposal'), ('penelitian dan bimbingan', 'Penelitian dan Bimbingan'), ('evaluasi dan monitoring', 'Evaluasi dan Monitoring'), ('sidang komisi 2', 'Sidang Komisi 2'), ('seminar', 'Seminar'), ('publikasi ilmiah', 'Publikasi Ilmiah'), ('ujian tesis', 'Ujian Tesis')], default='Penetapan Komisi Pembimbing', max_length=50)),
                ('status', models.CharField(choices=[('ahead of schedule', 'Ahead of Schedule'), ('on ideal schedule', 'On Ideal Schedule'), ('behind the schedule', 'Behind The Schedule')], default='ahead of schedule', max_length=30)),
                ('penelitian_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.penelitian')),
            ],
        ),
        migrations.CreateModel(
            name='Bimbingan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tahun_semester', models.CharField(choices=[('2024/2025 Ganjil', '2024/2025 Ganjil'), ('2024/2025 Genap', '2024/2025 Genap'), ('2025/2026 Ganjil', '2025/2026 Ganjil')], max_length=30)),
                ('nama', models.CharField(max_length=70)),
                ('deskripsi_kegiatan', models.CharField(max_length=200)),
                ('tipe_penyelenggaraan', models.CharField(choices=[('hybrid', 'Hybrid'), ('offline', 'Offline'), ('online', 'Online')], default='offline', max_length=10)),
                ('tanggal_mulai', models.DateTimeField()),
                ('tanggal_selesai', models.DateTimeField()),
                ('komentar', models.CharField(max_length=500)),
                ('nama_dokumen', models.CharField(help_text='Sertifikat Kegiatan, LOA, Laporan Kegiatan, Photo/Dokumentasi Kegiatan, dll', max_length=255)),
                ('file', models.FileField(help_text='Maksimum upload: 10MB. Jika lebih, upload ke tempat lain dan masukkan alamatnya pada bagian Link.', upload_to='dokumen_pendukung/')),
                ('link', models.URLField(help_text='URL yang merujuk kepada informasi kegiatan (website, media sosial, drive, dll)')),
                ('pembimbing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.pembimbing')),
                ('penelitian_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.penelitian')),
            ],
        ),
    ]
